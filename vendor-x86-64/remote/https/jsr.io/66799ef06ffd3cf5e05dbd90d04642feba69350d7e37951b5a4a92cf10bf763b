// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.
import { dirname } from "jsr:/@std/path@^0.221.0/dirname";
import { ensureDir, ensureDirSync } from "./ensure_dir.ts";
import { toPathString } from "./_to_path_string.ts";

/**
 * Asynchronously ensures that the hard link exists. If the directory structure
 * does not exist, it is created.
 *
 * @param src The source file path as a string or URL. Directory hard links are
 * not allowed.
 * @param dest The destination link path as a string or URL.
 * @returns A void promise that resolves once the hard link exists.
 *
 * @example
 * ```ts
 * import { ensureLink } from "@std/fs/ensure-link";
 *
 * await ensureLink("./folder/targetFile.dat", "./folder/targetFile.link.dat");
 * ```
 */
export async function ensureLink(src: string | URL, dest: string | URL) {
  dest = toPathString(dest);
  await ensureDir(dirname(dest));

  await Deno.link(toPathString(src), dest);
}

/**
 * Synchronously ensures that the hard link exists. If the directory structure
 * does not exist, it is created.
 *
 * @param src The source file path as a string or URL. Directory hard links are
 * not allowed.
 * @param dest The destination link path as a string or URL.
 * @returns A void value that returns once the hard link exists.
 *
 * @example
 * ```ts
 * import { ensureLinkSync } from "@std/fs/ensure-link";
 *
 * ensureLinkSync("./folder/targetFile.dat", "./folder/targetFile.link.dat");
 * ```
 */
export function ensureLinkSync(src: string | URL, dest: string | URL) {
  dest = toPathString(dest);
  ensureDirSync(dirname(dest));

  Deno.linkSync(toPathString(src), dest);
}

// denoCacheMetadata={"headers":{"cache-control":"public, max-age=31536000, immutable","content-security-policy":"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';","access-control-allow-origin":"*","x-guploader-uploadid":"AD-8ljsIJK0J0B6zzbgOaleg6KsByZwCmDSgiL5wgonJKT0pvjGuI1kcXtwZdou9i6DxlAs80UOYJ_0Eeg","cross-origin-resource-policy":"cross-origin","x-goog-metageneration":"1","via":"1.1 google","accept-ranges":"bytes","last-modified":"Thu, 28 Mar 2024 00:04:30 GMT","content-type":"text/typescript","x-goog-hash":"crc32c=ZfdqyA==,md5=7UBSZ+N+dSXRcvHFabLKJw==","x-jsr-cache-status":"miss","x-robots-tag":"noindex","x-content-type-options":"nosniff","etag":"\"ed405267e37e7525d172f1c569b2ca27\"","expires":"Mon, 06 Oct 2025 20:47:19 GMT","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","x-goog-generation":"1711584269982813","x-goog-stored-content-encoding":"identity","x-goog-storage-class":"STANDARD","content-length":"1643","x-jsr-cache-id":"MRS-e5589c6c","date":"Sun, 06 Oct 2024 20:47:19 GMT","access-control-expose-headers":"*","x-goog-stored-content-length":"1643","server":"UploadServer"},"url":"https://jsr.io/@std/fs/0.221.0/ensure_link.ts","time":1728247640}