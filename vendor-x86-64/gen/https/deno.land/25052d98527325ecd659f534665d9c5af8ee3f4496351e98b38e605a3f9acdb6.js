import { colors, join } from "../server/deps.ts";
import { setBuildId } from "../server/build_id.ts";
export class AotSnapshot {
  #files;
  #dependencies;
  constructor(files, dependencies){
    this.#files = files;
    this.#dependencies = dependencies;
  }
  get paths() {
    return Array.from(this.#files.keys());
  }
  async read(path) {
    const filePath = this.#files.get(path);
    if (filePath !== undefined) {
      try {
        const file = await Deno.open(filePath, {
          read: true
        });
        return file.readable;
      } catch (_err) {
        return null;
      }
    }
    // Handler will turn this into a 404
    return null;
  }
  dependencies(path) {
    return this.#dependencies.get(path) ?? [];
  }
}
export async function loadAotSnapshot(config) {
  const snapshotDirPath = config.build.outDir;
  try {
    if ((await Deno.stat(snapshotDirPath)).isDirectory) {
      console.log(`Using snapshot found at ${colors.cyan(snapshotDirPath)}`);
      const snapshotPath = join(snapshotDirPath, "snapshot.json");
      const json = JSON.parse(await Deno.readTextFile(snapshotPath));
      setBuildId(json.build_id);
      const dependencies = new Map(Object.entries(json.files));
      const files = new Map();
      Object.keys(json.files).forEach((name)=>{
        const filePath = join(snapshotDirPath, name);
        files.set(name, filePath);
      });
      return new AotSnapshot(files, dependencies);
    }
    return null;
  } catch (err) {
    if (!(err instanceof Deno.errors.NotFound)) {
      throw err;
    }
    return null;
  }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3gvZnJlc2hAMS42Ljgvc3JjL2J1aWxkL2FvdF9zbmFwc2hvdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZXNvbHZlZEZyZXNoQ29uZmlnIH0gZnJvbSBcIi4uL3NlcnZlci90eXBlcy50c1wiO1xuaW1wb3J0IHsgY29sb3JzLCBqb2luIH0gZnJvbSBcIi4uL3NlcnZlci9kZXBzLnRzXCI7XG5pbXBvcnQgdHlwZSB7IEJ1aWxkU25hcHNob3QsIEJ1aWxkU25hcHNob3RKc29uIH0gZnJvbSBcIi4vbW9kLnRzXCI7XG5pbXBvcnQgeyBzZXRCdWlsZElkIH0gZnJvbSBcIi4uL3NlcnZlci9idWlsZF9pZC50c1wiO1xuXG5leHBvcnQgY2xhc3MgQW90U25hcHNob3QgaW1wbGVtZW50cyBCdWlsZFNuYXBzaG90IHtcbiAgI2ZpbGVzOiBNYXA8c3RyaW5nLCBzdHJpbmc+O1xuICAjZGVwZW5kZW5jaWVzOiBNYXA8c3RyaW5nLCBzdHJpbmdbXT47XG5cbiAgY29uc3RydWN0b3IoXG4gICAgZmlsZXM6IE1hcDxzdHJpbmcsIHN0cmluZz4sXG4gICAgZGVwZW5kZW5jaWVzOiBNYXA8c3RyaW5nLCBzdHJpbmdbXT4sXG4gICkge1xuICAgIHRoaXMuI2ZpbGVzID0gZmlsZXM7XG4gICAgdGhpcy4jZGVwZW5kZW5jaWVzID0gZGVwZW5kZW5jaWVzO1xuICB9XG5cbiAgZ2V0IHBhdGhzKCk6IHN0cmluZ1tdIHtcbiAgICByZXR1cm4gQXJyYXkuZnJvbSh0aGlzLiNmaWxlcy5rZXlzKCkpO1xuICB9XG5cbiAgYXN5bmMgcmVhZChwYXRoOiBzdHJpbmcpOiBQcm9taXNlPFJlYWRhYmxlU3RyZWFtPFVpbnQ4QXJyYXk+IHwgbnVsbD4ge1xuICAgIGNvbnN0IGZpbGVQYXRoID0gdGhpcy4jZmlsZXMuZ2V0KHBhdGgpO1xuICAgIGlmIChmaWxlUGF0aCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBmaWxlID0gYXdhaXQgRGVuby5vcGVuKGZpbGVQYXRoLCB7IHJlYWQ6IHRydWUgfSk7XG4gICAgICAgIHJldHVybiBmaWxlLnJlYWRhYmxlO1xuICAgICAgfSBjYXRjaCAoX2Vycikge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBIYW5kbGVyIHdpbGwgdHVybiB0aGlzIGludG8gYSA0MDRcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGRlcGVuZGVuY2llcyhwYXRoOiBzdHJpbmcpOiBzdHJpbmdbXSB7XG4gICAgcmV0dXJuIHRoaXMuI2RlcGVuZGVuY2llcy5nZXQocGF0aCkgPz8gW107XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGxvYWRBb3RTbmFwc2hvdChcbiAgY29uZmlnOiBSZXNvbHZlZEZyZXNoQ29uZmlnLFxuKTogUHJvbWlzZTxBb3RTbmFwc2hvdCB8IG51bGw+IHtcbiAgY29uc3Qgc25hcHNob3REaXJQYXRoID0gY29uZmlnLmJ1aWxkLm91dERpcjtcbiAgdHJ5IHtcbiAgICBpZiAoKGF3YWl0IERlbm8uc3RhdChzbmFwc2hvdERpclBhdGgpKS5pc0RpcmVjdG9yeSkge1xuICAgICAgY29uc29sZS5sb2coXG4gICAgICAgIGBVc2luZyBzbmFwc2hvdCBmb3VuZCBhdCAke2NvbG9ycy5jeWFuKHNuYXBzaG90RGlyUGF0aCl9YCxcbiAgICAgICk7XG5cbiAgICAgIGNvbnN0IHNuYXBzaG90UGF0aCA9IGpvaW4oc25hcHNob3REaXJQYXRoLCBcInNuYXBzaG90Lmpzb25cIik7XG4gICAgICBjb25zdCBqc29uID0gSlNPTi5wYXJzZShcbiAgICAgICAgYXdhaXQgRGVuby5yZWFkVGV4dEZpbGUoc25hcHNob3RQYXRoKSxcbiAgICAgICkgYXMgQnVpbGRTbmFwc2hvdEpzb247XG4gICAgICBzZXRCdWlsZElkKGpzb24uYnVpbGRfaWQpO1xuXG4gICAgICBjb25zdCBkZXBlbmRlbmNpZXMgPSBuZXcgTWFwPHN0cmluZywgc3RyaW5nW10+KFxuICAgICAgICBPYmplY3QuZW50cmllcyhqc29uLmZpbGVzKSxcbiAgICAgICk7XG5cbiAgICAgIGNvbnN0IGZpbGVzID0gbmV3IE1hcDxzdHJpbmcsIHN0cmluZz4oKTtcbiAgICAgIE9iamVjdC5rZXlzKGpzb24uZmlsZXMpLmZvckVhY2goKG5hbWUpID0+IHtcbiAgICAgICAgY29uc3QgZmlsZVBhdGggPSBqb2luKHNuYXBzaG90RGlyUGF0aCwgbmFtZSk7XG4gICAgICAgIGZpbGVzLnNldChuYW1lLCBmaWxlUGF0aCk7XG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIG5ldyBBb3RTbmFwc2hvdChmaWxlcywgZGVwZW5kZW5jaWVzKTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGlmICghKGVyciBpbnN0YW5jZW9mIERlbm8uZXJyb3JzLk5vdEZvdW5kKSkge1xuICAgICAgdGhyb3cgZXJyO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLFNBQVMsTUFBTSxFQUFFLElBQUksUUFBUSxvQkFBb0I7QUFFakQsU0FBUyxVQUFVLFFBQVEsd0JBQXdCO0FBRW5ELE9BQU8sTUFBTTtFQUNYLENBQUEsS0FBTSxDQUFzQjtFQUM1QixDQUFBLFlBQWEsQ0FBd0I7RUFFckMsWUFDRSxLQUEwQixFQUMxQixZQUFtQyxDQUNuQztJQUNBLElBQUksQ0FBQyxDQUFBLEtBQU0sR0FBRztJQUNkLElBQUksQ0FBQyxDQUFBLFlBQWEsR0FBRztFQUN2QjtFQUVBLElBQUksUUFBa0I7SUFDcEIsT0FBTyxNQUFNLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQSxLQUFNLENBQUMsSUFBSTtFQUNwQztFQUVBLE1BQU0sS0FBSyxJQUFZLEVBQThDO0lBQ25FLE1BQU0sV0FBVyxJQUFJLENBQUMsQ0FBQSxLQUFNLENBQUMsR0FBRyxDQUFDO0lBQ2pDLElBQUksYUFBYSxXQUFXO01BQzFCLElBQUk7UUFDRixNQUFNLE9BQU8sTUFBTSxLQUFLLElBQUksQ0FBQyxVQUFVO1VBQUUsTUFBTTtRQUFLO1FBQ3BELE9BQU8sS0FBSyxRQUFRO01BQ3RCLEVBQUUsT0FBTyxNQUFNO1FBQ2IsT0FBTztNQUNUO0lBQ0Y7SUFFQSxvQ0FBb0M7SUFDcEMsT0FBTztFQUNUO0VBRUEsYUFBYSxJQUFZLEVBQVk7SUFDbkMsT0FBTyxJQUFJLENBQUMsQ0FBQSxZQUFhLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRTtFQUMzQztBQUNGO0FBRUEsT0FBTyxlQUFlLGdCQUNwQixNQUEyQjtFQUUzQixNQUFNLGtCQUFrQixPQUFPLEtBQUssQ0FBQyxNQUFNO0VBQzNDLElBQUk7SUFDRixJQUFJLENBQUMsTUFBTSxLQUFLLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxXQUFXLEVBQUU7TUFDbEQsUUFBUSxHQUFHLENBQ1QsQ0FBQyx3QkFBd0IsRUFBRSxPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQztNQUczRCxNQUFNLGVBQWUsS0FBSyxpQkFBaUI7TUFDM0MsTUFBTSxPQUFPLEtBQUssS0FBSyxDQUNyQixNQUFNLEtBQUssWUFBWSxDQUFDO01BRTFCLFdBQVcsS0FBSyxRQUFRO01BRXhCLE1BQU0sZUFBZSxJQUFJLElBQ3ZCLE9BQU8sT0FBTyxDQUFDLEtBQUssS0FBSztNQUczQixNQUFNLFFBQVEsSUFBSTtNQUNsQixPQUFPLElBQUksQ0FBQyxLQUFLLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztRQUMvQixNQUFNLFdBQVcsS0FBSyxpQkFBaUI7UUFDdkMsTUFBTSxHQUFHLENBQUMsTUFBTTtNQUNsQjtNQUVBLE9BQU8sSUFBSSxZQUFZLE9BQU87SUFDaEM7SUFDQSxPQUFPO0VBQ1QsRUFBRSxPQUFPLEtBQUs7SUFDWixJQUFJLENBQUMsQ0FBQyxlQUFlLEtBQUssTUFBTSxDQUFDLFFBQVEsR0FBRztNQUMxQyxNQUFNO0lBQ1I7SUFDQSxPQUFPO0VBQ1Q7QUFDRiJ9
// denoCacheMetadata=11723349383134609938,16432737551355317011